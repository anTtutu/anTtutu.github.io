<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anttu&#39;s Blog</title>
    <link>https://anTtutu.github.io/</link>
    <description>Recent content on Anttu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 11 Aug 2022 00:29:47 +0800</lastBuildDate><atom:link href="https://anTtutu.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>转载-arthas常见用法</title>
      <link>https://anTtutu.github.io/post/2022-08-11-arthas/</link>
      <pubDate>Thu, 11 Aug 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-08-11-arthas/</guid>
      <description>前言 Arthas是Alibaba开源的Java诊断工具，动态跟踪Java代码；实时监控JVM状态，可以在不中断程序执行的情况下轻松完成JVM相关问题排查工作 。支持JDK 6+，支持Linux/Mac/Windows。这个工具真的很好用，而且入门超简单，十分推荐。 1、使用场景 1、这个</description>
    </item>
    
    <item>
      <title>python打包-只依赖自己项目引用的module</title>
      <link>https://anTtutu.github.io/post/2022-06-17-python_req/</link>
      <pubDate>Fri, 17 Jun 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-06-17-python_req/</guid>
      <description>前言 本地开发python后，需要生成requirements.txt，但是不做处理的话，会把你本地安装的所有module都依赖进来，找到一个根据项目生成依赖的工具 1、安装 1 pip install pipreqs 2、生成项目依赖 进入项目根目录 1 pipreqs . --encoding=utf8 --force 说明 参数 说明 &amp;ndash;force 会覆盖前一个requirements.txt &amp;ndash;encoding=utf8 解</description>
    </item>
    
    <item>
      <title>渗透测试的部分资料</title>
      <link>https://anTtutu.github.io/post/2022-05-25-pen_testing/</link>
      <pubDate>Wed, 25 May 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-05-25-pen_testing/</guid>
      <description>前言 整理了一些渗透测试的资料，方便查阅。 1、漏洞扫描 1.1 xray xray 是一款功能强大的安全评估工具，由多名经验丰富的一线安全从业者呕心打造而成，主要特性有: 检测速度快。发包速度快; 漏洞检测算法高效。 支持范围广。大至 OWASP Top 10 通用漏洞检测，小至各种 CMS 框架 POC，均可以支持。 代码质量高。编写代码的人</description>
    </item>
    
    <item>
      <title>转载-shell 13问</title>
      <link>https://anTtutu.github.io/post/2022-04-22-shell_question/</link>
      <pubDate>Fri, 22 Apr 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-04-22-shell_question/</guid>
      <description>前言 shell编写入门的时候，有幸看到比较经典的 shell 13问，碰到有大佬整理成 markdown 格式，转载过来 1、为何叫做 Shell？ 我们知道计算机的运作离不开硬件，但却无法直接操作硬件，硬件的驱动只能通过一种称之为“操作系统（OS，Opertating System）的软件来管控。Linux 严格来说</description>
    </item>
    
    <item>
      <title>SpringCloud GateWay的一些细节注意</title>
      <link>https://anTtutu.github.io/post/2022-04-02-spring_cloud_gateway/</link>
      <pubDate>Sat, 02 Apr 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-04-02-spring_cloud_gateway/</guid>
      <description>前言 spring cloud 2.* 的路由用的是 gateway 方案，不再是 1.* 时代的 zuul 了，不过也带来了新问题，这里整理下近期优化 gateway 的鉴权带来的爬坑记录 1、理解 gateway 与 zuul 比较 SpringCloud Gateway 是 Spring Cloud 的一个全新项目，该项目是基于 Spring 5.0，Spring Boot 2.0 和 Project Reactor 等技术开发的网关，它旨在为微服务架构提供一种简单有效的统一的 API 路由管理方式。 SpringCloud Gateway 作</description>
    </item>
    
    <item>
      <title>linux后台执行可用方式整理</title>
      <link>https://anTtutu.github.io/post/2022-03-23-linux_backend_execute/</link>
      <pubDate>Wed, 23 Mar 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-03-23-linux_backend_execute/</guid>
      <description>前言 最近答疑群友如何后台运行 ssh 连接后的操作，整理了下日常常见的后台执行方式，方便知识梳理。 1、nohup方式 1 2 # nohup sh shell.sh &amp;amp; 查看日志：tail -f nohup.out 2、disown方式 1 2 # sh shell.sh &amp;amp; disown 查看日志：断开终端后，不能再查看日志 3、screen方式 执行screen，如果命令不存在，需要先安装：</description>
    </item>
    
    <item>
      <title>redis日常使用的一些建议</title>
      <link>https://anTtutu.github.io/post/2022-03-05-redis_safe/</link>
      <pubDate>Sat, 05 Mar 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-03-05-redis_safe/</guid>
      <description>前言 最近处理了几起redis不安全的阿里云服务器，总结下一些建议 1、安全建议 1.1、设置bind 默认bind 0.0.0.0是默认值，相当于不设防 1 2 3 bind 0.0.0.0 建议修改成链接端的IP，比如 bind 192.168.100.101 1.2、设置auth 默认是不设置密码，相当于不需要密码和鉴权就可以访问 1 2 3 requirepass foobared 建议开启密码访</description>
    </item>
    
    <item>
      <title>logrotate日志切割</title>
      <link>https://anTtutu.github.io/post/2022-02-13-logrotate/</link>
      <pubDate>Sun, 13 Feb 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-02-13-logrotate/</guid>
      <description>前言 无意间找到nginx下的日志切割组件，比以前用脚本每日备份好多了，研究了一番用法 1、关于日志切割 日志文件包含了关于系统中发生的事件的有用信息，在排障过程中或者系统性能分析时经常被用到。对于忙碌的服务器，日志文件大小会增长极快，服务器会很快消耗磁盘空间，这成了个问题。除此之外，</description>
    </item>
    
    <item>
      <title>spring boot cli&amp;spring cloud cli简单介绍</title>
      <link>https://anTtutu.github.io/post/2022-02-07-spring_cli/</link>
      <pubDate>Mon, 07 Feb 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-02-07-spring_cli/</guid>
      <description>前言 尝试了下springboot cli和spring cloud cli 命令，整理了下参数和创建项目的介绍 1、下载 1.1 下载springboot cli安装包 官方介绍：https://docs.spring.io/spring-boot/docs/current/reference/html/gett</description>
    </item>
    
    <item>
      <title>vmstat介绍</title>
      <link>https://anTtutu.github.io/post/2022-02-06-vmstat/</link>
      <pubDate>Sun, 06 Feb 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-02-06-vmstat/</guid>
      <description>前言 vmstat是virtual memory statistics 的缩写，它是Linux下一个非常有用的监控工具，除了内存之外，还提供 块 IO、CPU 时间 等额外的信息 1、语法 vmstat 命令的执行不需要特殊的权限，普通用户就可以执行，其语法形式如下 1 vmstat [options] [delay [count]] delay 表示数据更新间隔，单位是秒，如果没有指定此值，表示系统启动以来</description>
    </item>
    
    <item>
      <title>挖矿病毒4-容器挖矿病毒清理</title>
      <link>https://anTtutu.github.io/post/2022-01-26-miner_virus_4/</link>
      <pubDate>Wed, 26 Jan 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-01-26-miner_virus_4/</guid>
      <description>前言 1月26日，运维同学收到告警邮件，告诉我某台测试服务器中了挖矿病毒，心想怎么最近挖矿这么猖狂&amp;hellip; 1、分析准备 仍然下载是busybox 1 2 3 4 wget https://busybox.net/downloads/binaries/1.30.0-i686/busybox chmod +x busybox cp busybox /usr/bin busybox top 2、按步骤排查 剩余步骤跟挖矿病毒2-分析和排查思路一样，只是所有的命令前面是 busybox command 不过这次是容器挖矿，EC</description>
    </item>
    
    <item>
      <title>挖矿病毒3-分析和清理过程</title>
      <link>https://anTtutu.github.io/post/2022-01-24-miner_virus_3/</link>
      <pubDate>Mon, 24 Jan 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-01-24-miner_virus_3/</guid>
      <description>前言 1月23日，公司邮箱收到说阿里云报了挖矿病毒的警告 1、分析 这次思路改进了些，起初有个只是定时任务没被清理，阿里云通过定时任务关键字&amp;quot;pool.minexmr.com:4444&amp;quot;报了蠕虫病毒，但是根据关键字查看，这像挖矿 然后 top 了半天没看到结果，怀疑是top被</description>
    </item>
    
    <item>
      <title>一些正则小细节-不定期补充</title>
      <link>https://anTtutu.github.io/post/2022-01-07-regexp/</link>
      <pubDate>Fri, 07 Jan 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-01-07-regexp/</guid>
      <description>前言 记录日常工作碰到的一些正则小细节 1、group分组 需要通过()把提取的参数圈起来，这样才会产生分组 1 2 3 4 5 6 7 8 9 10 private static String collectMapperId(String value) { String result = &amp;#34;&amp;#34;; String regId = &amp;#34;id=\&amp;#34;(.*?)\&amp;#34;&amp;#34;; Pattern pattern = Pattern.compile(regId); Matcher matcher = pattern.matcher(value); if (matcher.find()) { result = matcher.group(1); } return result; } 对比如果没有(),是没有分组效果的 1 2 Exception in thread &amp;#34;main&amp;#34; java.lang.IndexOutOfBoundsException: No group 1 at java.util.regex.Matcher.group(Matcher.java:538) 阅读源码和源码中的注释，其实也是s.</description>
    </item>
    
    <item>
      <title>sdkman的使用</title>
      <link>https://anTtutu.github.io/post/2022-01-06-sdkman/</link>
      <pubDate>Thu, 06 Jan 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-01-06-sdkman/</guid>
      <description>前言 多sdk版本管理工具 1、安装java jdk 1 sdk install java 2、安装指定版本的 java jdk 1 sdk install java 8u131 3、安装本地包 1 sdk install groovy 3.0.0-SNAPSHOT /path/to/groovy-3.0.0-SNAPSHOT 4、移除 java jdk 1 sdk uninstall java 5、查看当前生效的 java jdk 1 2 3 sdk current java # 查看所有本地包的当前版本 sdk current 6、查看支持的清单 1 sdk list 7、查看软件的版本 1 sdk list java 8、临时切换版本 1 sdk use java 8.0.232.hs-adpt 9、切换默认</description>
    </item>
    
    <item>
      <title>mysql大表的数据清理</title>
      <link>https://anTtutu.github.io/post/2021-12-23-mysql_table_clean/</link>
      <pubDate>Thu, 23 Dec 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-12-23-mysql_table_clean/</guid>
      <description>前言 mysql的表日积月累也会出现过千万的大表，有些历史数据可以定期归档清理的，保留最近的数据即可。但是delete table_name where id = &amp;lsquo;&amp;rsquo;;这种方式只是逻辑上的删除，不会释放表空间和索引的。因此需要在历史数据归档后做表分析才行 1、大表归档大量数据 先远程备份，可以开发</description>
    </item>
    
    <item>
      <title>nmap参数详解</title>
      <link>https://anTtutu.github.io/post/2021-12-17-nmap/</link>
      <pubDate>Fri, 17 Dec 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-12-17-nmap/</guid>
      <description>前言 用nmap扫描域名整理下一些细节参数 1、语法 1 nmap [扫描类型] [选项] {目标规格} 2、选项 目标规格： 可以通过主机名，IP地址，网络等 例如： 1 2 3 4 5 scanme.nmap.org，microsoft.com/24，192.168.0.1; 10.0.0-255.1-254 -iL &amp;lt;inputfilename&amp;</description>
    </item>
    
    <item>
      <title>log4j2远程执行漏洞</title>
      <link>https://anTtutu.github.io/post/2021-12-13-log4j2_cve/</link>
      <pubDate>Mon, 13 Dec 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-12-13-log4j2_cve/</guid>
      <description>前言 12月9日爆出来的log4j2远程执行漏洞，因为影响巨大，网上新闻和介绍特别多，这里不多说，间接使用log4j2的第三方也不少，等官网修复不知道是否赶得上，直接采用暴力删除jndilook.class最简单 1、直接删除漏洞class 1 2 3 4 5 6 7 8 9 10 11 #!/bin/bash set -eu for JAR_PATH in &amp;#34;$@&amp;#34;; do if [[ $JAR_PATH</description>
    </item>
    
    <item>
      <title>lombok一些注解的含义</title>
      <link>https://anTtutu.github.io/post/2021-11-19-lombok/</link>
      <pubDate>Fri, 19 Nov 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-11-19-lombok/</guid>
      <description>前言 lombok一些注解的含义整理 1、@Accessors(chain = true) 链式风格，在调用set方法时，返回这个类的实例对象，比如：a.b.c 2、@Data 在JavaBean或类JavaBean中使用，这个注解包含范围最广，它包含getter、setter、NoArgsConst</description>
    </item>
    
    <item>
      <title> git的日常操作命令整理</title>
      <link>https://anTtutu.github.io/post/2021-10-19-git/</link>
      <pubDate>Tue, 19 Oct 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-10-19-git/</guid>
      <description>前言 git的一些常见命令操作整理 1、下载 depth用于指定克隆深度，为1即表示只克隆最近一次commit，可以减少下载的容量 1 git cone --depth=1 {http://xxx/url} 2、撤销commit 默认撤销，不撤销本地代码，撤销commit，并且撤销git add 1 git reset --mixed HEAD^ 不删除工作空间改动代码，撤销commit，不撤销git add</description>
    </item>
    
    <item>
      <title>caffeine和springcache</title>
      <link>https://anTtutu.github.io/post/2021-10-11-caffeine_springcache/</link>
      <pubDate>Mon, 11 Oct 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-10-11-caffeine_springcache/</guid>
      <description>前言 说到caffeine，一般会对比 google 家的 guava，这里只做浅析。 缓存 缓存分为本地缓存和远端缓存。 常见的远端缓存有Redis，MongoDB； 本地缓存一般使用map的方式保存在本地内存中。 一般我们在业务中操作缓存，都会操作缓存和数据源两部分。 如：put数据时，先插入DB，再删除</description>
    </item>
    
    <item>
      <title>前端编码安全</title>
      <link>https://anTtutu.github.io/post/2021-10-07-safe_coding_js/</link>
      <pubDate>Thu, 07 Oct 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-10-07-safe_coding_js/</guid>
      <description>前端js开发 &amp;ndash; 转自腾讯github I. 代码实现 1.1 原生DOM API的安全操作 1.1.1【必须】HTML标签操作，限定/过滤传入变量值 使用innerHTML=、outerHTML=、document.write()、document.writeln()时，如变量值外部可控，应对特殊字符</description>
    </item>
    
    <item>
      <title>java编码安全</title>
      <link>https://anTtutu.github.io/post/2021-09-30-safe_coding_java/</link>
      <pubDate>Thu, 30 Sep 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-09-30-safe_coding_java/</guid>
      <description>后端java开发 &amp;ndash; 转自腾讯github 1.1 数据持久化 1.1.1【必须】SQL语句默认使用预编译并绑定变量 Web后台系统应默认使用预编译绑定变量的形式创建sql语句，保持查询语句和数据相分离。以从本质上避免SQL注入风险。 如使用Mybatis作为持久层框架，应通过#{}语法进行参数绑</description>
    </item>
    
    <item>
      <title>maven校验依赖包CVE漏洞</title>
      <link>https://anTtutu.github.io/post/2021-09-19-maven_verify/</link>
      <pubDate>Sun, 19 Sep 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-09-19-maven_verify/</guid>
      <description>前言 maven也可以校验依赖包是有有CVE漏洞 1、maven检测依赖包CVE漏洞 1 mvn verify -DskipTests=true 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 &amp;lt;build&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;!-- owasp check CVE 检查依赖包是否有漏洞 command: mvn verify --&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.owasp&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;dependency-check-maven&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;6.5.1&amp;lt;/version&amp;gt; &amp;lt;executions&amp;gt; &amp;lt;execution&amp;gt; &amp;lt;goals&amp;gt; &amp;lt;goal&amp;gt;check&amp;lt;/goal&amp;gt; &amp;lt;/goals&amp;gt; &amp;lt;/execution&amp;gt; &amp;lt;/executions&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;/plugins&amp;gt; &amp;lt;/build&amp;gt; 2、检测结果demo 第一次执行因下载CVE数据有些慢 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</description>
    </item>
    
    <item>
      <title>jvm的大dump文件分析</title>
      <link>https://anTtutu.github.io/post/2021-08-10-jvm_dump_analyse/</link>
      <pubDate>Tue, 10 Aug 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-08-10-jvm_dump_analyse/</guid>
      <description>前言 参考dump文件的大小，如果超过6G、8G 一般我们本地电脑无法打开，可以找大容量的linux服务器，配置对应启动的jvm 内存后可以参考下面的步骤 1、下载linux版本的mat 1 wget http://eclipse.stu.edu.tw/mat/1.9.0/rcp/MemoryAnalyzer-1.9.0.20190605-linux.gtk.x86_64.zip 2、解压zip包 unzip MemoryAnalyzer-1.9.0.20190605-linux.gtk.x86_64.zip 3、修改linux mat的堆内存大小（看自己下载的堆的大小，默认mat的堆支</description>
    </item>
    
    <item>
      <title>maven的scope参数</title>
      <link>https://anTtutu.github.io/post/2021-07-15-maven_scope/</link>
      <pubDate>Thu, 15 Jul 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-07-15-maven_scope/</guid>
      <description>1、用maven引用没进中央仓库的包 在使用maven的时候，如果我们要依赖一个本地的jar包的时候，通常都会使用&amp;lt;scope&amp;gt;system&amp;lt;/scope&amp;gt;和&amp;lt;systemPath&amp;gt;&amp;lt;/systemPath&amp;gt;来处理。 例如： 1 2 3 4 5 6</description>
    </item>
    
    <item>
      <title>python工具-faker测试数据生成器</title>
      <link>https://anTtutu.github.io/post/2021-06-05-python_faker/</link>
      <pubDate>Sat, 05 Jun 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-06-05-python_faker/</guid>
      <description>1、参考 官方地址： https://faker.readthedocs.io/ ruby 和 java 下都有类似的 faker 工具，但是对比过 java 的，还是 python 这个完善很多。ruby 的暂没测试 2、用法示例 1 2 3 4 5 from faker import Faker fake = Faker(locale=&amp;#39;zh_CN&amp;#39;) #为生成数据的文化选项，默认为en_US，只有使用了相关文化，才能生成对应的随机信息 #由于文化差异，设置文化的时候会导致有些字段比如省份等会出现</description>
    </item>
    
    <item>
      <title>系统端口速查</title>
      <link>https://anTtutu.github.io/post/2021-05-01-system_port/</link>
      <pubDate>Sat, 01 May 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-05-01-system_port/</guid>
      <description>操作系统端口速查 端口 说明 1 传输控制协议端口服务多路开关选择器 2 compressnet 管理实用程序 3 压缩进程 5 远程作业登录 7 回显(Echo) 9 丢弃 11 在线用户 12 我的测试端口 13 时间 15 netstat 17 每日引用 18 消息发送协议 19 字符发生器 20 文件传输协议(默认数据口) 21 文件传输协议(控制) 22 SSH远程登录协议 23 telnet 终端仿真协议</description>
    </item>
    
    <item>
      <title>python生成matplotlib的统计图</title>
      <link>https://anTtutu.github.io/post/2021-04-30-python_matplotlib/</link>
      <pubDate>Fri, 30 Apr 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-04-30-python_matplotlib/</guid>
      <description>前言 记录下python生成统计图的一些常规使用，主要是2D的统计图，3D的暂不涉及 1、准备工作 1.1 安装pandas和matplotlib 1 2 pip install pandas pip install matplotlib 1.2 安装numpy 1 pip install numpy 1.3 中文字体 中文字体名 英文字体名 宋体 SimSun 黑体 SimHei 微软雅黑 Microsoft YaHei 微软正黑体 Microsoft JhengHei 新宋体 NSimSun 新细明体 PMingLiU 细明体 MingLiU 标楷体 DFKai-SB 仿宋</description>
    </item>
    
    <item>
      <title>kafka集群和zk集群搭建</title>
      <link>https://anTtutu.github.io/post/2021-04-10-kafka_zookeeper_cluster_install/</link>
      <pubDate>Sat, 10 Apr 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-04-10-kafka_zookeeper_cluster_install/</guid>
      <description>前言 一台应用的第三方服务器的kafka只有3个分区，测试一直存在积压的消息，搭建了一套最简单集群测试下，记录中间的参数。 1、准备工作 1.1 环境准备 环境 版本 说明 centos 7.0 操作系统服务器，3台 JDK 1.8.261 安装好jdk并设置好环境变量 zookeeper 3.4.9 zk官方安装包 kafka 2.2.0_2.12 kafka官方安装包 1.2 服务器 IP 端口 说明 192.168.211.125 zk:2181 zk he</description>
    </item>
    
    <item>
      <title>deepfacelab使用介绍</title>
      <link>https://anTtutu.github.io/post/2021-03-29-change_face/</link>
      <pubDate>Mon, 29 Mar 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-03-29-change_face/</guid>
      <description>前言 应朋友要求，研究下deepfacelab的环境搭建和使用步骤，记录下中间的问题和过程。 1、deepfacelab核心库 1 git clone --depth=1 https://github.com/iperov/DeepFaceLab 2、成熟的deepfacelab安装项目包 win10环境，软件磁力连接（迅雷复制下载）： 1 magnet:?xt=urn:btih:3384316e126920d7e1cbd2acb16b9513a57b2645&amp;amp;dn=DeepFaceLab&amp;amp;tr=udp%3a%2f%2ftracker.coppersurfer.tk%3a6969%2fannounce 3、安装前的准备 1、如果用的步骤3中的成熟项目包只需要依</description>
    </item>
    
    <item>
      <title>android下的termux模拟器安装openJDK和运行springboot项目</title>
      <link>https://anTtutu.github.io/post/2021-03-10-android_termux_java/</link>
      <pubDate>Wed, 10 Mar 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-03-10-android_termux_java/</guid>
      <description>前言 2020年9月份打造好了termux，但是苦于jdk没法安装，只能简单的用ecj(eclipse的java，类似jdk的javac)，但是springboot或者tomcat的项目怎么跑啊? 今天为了做培训演示，找到了termux下的openJDK资源，记录下安装的经过。ter</description>
    </item>
    
    <item>
      <title>挖矿病毒2-分析和排查思路</title>
      <link>https://anTtutu.github.io/post/2021-01-28-miner_virus_2/</link>
      <pubDate>Thu, 28 Jan 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-01-28-miner_virus_2/</guid>
      <description>前言 1月23日晚上22点附近，公司群收到管理员说阿里云报了挖矿病毒的警告 因此本人手里处理过2次挖矿病毒，针对挖矿病毒的杀毒和溯源，个人整理下心得，也有一部分思路来源网络整理 1、分析 1.1 top查看异常进程和占用率 发现一个叫sh的进程名几乎占用全部的cpu资源 1.2 根据pid查找挖矿病毒的</description>
    </item>
    
    <item>
      <title>golang奇怪的知识点</title>
      <link>https://anTtutu.github.io/post/2021-01-16-goland_strange-knowledge/</link>
      <pubDate>Sat, 16 Jan 2021 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2021-01-16-goland_strange-knowledge/</guid>
      <description>前言 golang里面的奇怪知识点总结，本人才疏学浅，可能总结得不到位或者有些纰漏，仅把学习golang知识的一些细节记录下，权当学习笔记 最后的其他分类里面有很多几年前学习golang时候的一些基础规则，也放进来吧，当回顾下好了 1、包名带! 无意间发现包名有个别带!，不知道为啥，找了</description>
    </item>
    
    <item>
      <title>Win10下打包go工具增加icon</title>
      <link>https://anTtutu.github.io/post/2020-12-26-win10_go_build_icon/</link>
      <pubDate>Sat, 26 Dec 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-12-26-win10_go_build_icon/</guid>
      <description>前言 go build默认产生的可执行文件没有图标icon，有时候挺丑的，想增加icon怎么办呢 1、方法1 - windres命令 怎么安装和使用minGW参考前一篇文章Win10下新的gcc工具 1.1、创建rc文件 以test.go举例, 假设打包文件名test.exe, ico文件名test.</description>
    </item>
    
    <item>
      <title>Win10下新的gcc工具</title>
      <link>https://anTtutu.github.io/post/2020-12-05-win10_gcc_build_tools/</link>
      <pubDate>Sat, 05 Dec 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-12-05-win10_gcc_build_tools/</guid>
      <description>前言 偶尔碰到从github download的开源项目需要gcc编译，以前用cygwin，cygwin是仿真模拟器，如果不想过于折腾的话，可以用mingw或者wls ubuntu。 不过mingw更加简单和小巧，cygwin或者wls都还需要再需要apg-get或者yum安装一些包，m</description>
    </item>
    
    <item>
      <title>Win10有道云笔记去掉左下角广告</title>
      <link>https://anTtutu.github.io/post/2020-11-16-ynote_disable_ad/</link>
      <pubDate>Mon, 16 Nov 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-11-16-ynote_disable_ad/</guid>
      <description>前言 有道云笔记，免费的，虽然不那么完美，但是毕竟免费，记录下笔记还是不错的选择，支持markdown、富文本等丰富的类型，但是win10下面左下角有个很烦人的广告，一直想去掉。 结果无意间发现安装目录下有个theme目录，目录下有个build.xml，搜索发现有左下角广告注释，然后</description>
    </item>
    
    <item>
      <title>Win10安装kenlm语言模型模块</title>
      <link>https://anTtutu.github.io/post/2020-11-15-win10_kenlm_install/</link>
      <pubDate>Sun, 15 Nov 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-11-15-win10_kenlm_install/</guid>
      <description>前言 最近看到一篇关于汉字点选登录校验的学习模型，觉得比较有趣，可以搜集，成功率很高，93%以上的成功率，还是很不错的，于是下载并搭建环境，但是安装其中kenlm语言模型模块时走了不少弯路，记录下 1、依赖 该工程需要依赖如下module，除了最后一个不好安装外，其他都比较容易，ten</description>
    </item>
    
    <item>
      <title>Mac升级SSD</title>
      <link>https://anTtutu.github.io/post/2020-10-08-mbp_ssd/</link>
      <pubDate>Thu, 08 Oct 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-10-08-mbp_ssd/</guid>
      <description>前言 最近准备给自己的mbp2015升级下固态硬盘，替换成西数蓝盘sn550 1T的，需要准备2个固态硬盘，一个1T用于安装新系统，另外一个固态硬盘+硬盘盒用于数据备份和时间机器备份 1、时间机器备份，方便新SSD安装系统后还原之前安装的APP和数据 2、数据备份，采用carbon copy cl</description>
    </item>
    
    <item>
      <title>android下安装termux模拟器-超便携linux</title>
      <link>https://anTtutu.github.io/post/2020-09-28-android_termux/</link>
      <pubDate>Mon, 28 Sep 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-09-28-android_termux/</guid>
      <description>前言 临近2020年国庆8天长假，因需要安装信息安全管理软件，由自带mbp更换公司的matebook新笔记本，想着还是用android机配置一套服务器环境更加便携，便试试找下不需要root的android模拟器，没想到还真找到了。 有2套方案： 序号 App 备注 1 linux deploy android下完美运行</description>
    </item>
    
    <item>
      <title>Mac下的工具软件</title>
      <link>https://anTtutu.github.io/post/2020-09-21-mac_app_list/</link>
      <pubDate>Mon, 21 Sep 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-09-21-mac_app_list/</guid>
      <description>前言 最近准备给自己的mbp2015升级下固态硬盘，替换成西数蓝盘sn550 1T的，为了保险，备份下工具app 1、开发 序号 App名称 版本号 图标 简单介绍 下载地址 1 iTerm2 3.3.9 Mac下的替换系统自带的本地终端工具 免费，官网下载地址 2 SecureCRT 8.5.3 Mac下的服务器端终端工具，挺好用 收费，官网下载地址 3 微信</description>
    </item>
    
    <item>
      <title>Mac下安装aria2下载工具</title>
      <link>https://anTtutu.github.io/post/2020-09-20-mac_aria2_install/</link>
      <pubDate>Sun, 20 Sep 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-09-20-mac_aria2_install/</guid>
      <description>前言 尝试在自己的Mac上源码方式安装aria2，根据教程修改了下限制的线程数，然后总结下经验 1、下载aria2源码 下载地址：https://github.com/aria2/aria2 1 git clone https://github.com/aria2/aria2.git 2、提前准备Mac的编译环境 因aria2是C++的，需要C++的环境，可以通过brew安</description>
    </item>
    
    <item>
      <title>Mac下远程运行Linux的GUI程序</title>
      <link>https://anTtutu.github.io/post/2020-09-17-xwindows_x11_xquartz/</link>
      <pubDate>Thu, 17 Sep 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-09-17-xwindows_x11_xquartz/</guid>
      <description>前言 2019年嫌公司发的E480定制16G太卡更换自己的MacBookPro2015后，一直也没碰到linux下的GUI程序，前阵子有程序jvm内存泄露，生成的dump文件有5G，用自己的mbp解析内存不足，就想到以前整理的IBM的dump分析工具jca458，然后盲目的试了试，</description>
    </item>
    
    <item>
      <title>linux下录屏工具本地化测试</title>
      <link>https://anTtutu.github.io/post/2020-09-10-asciinema_local_test/</link>
      <pubDate>Thu, 10 Sep 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-09-10-asciinema_local_test/</guid>
      <description>前言 一次看别人的blog发现一个linux的录屏工具asciinema 官网: https://asciinema.org/ github: https://github.com/asciinema 1、在linux下安装工具 1 2 3 4 5 6 7 8 pip install: pip3 install asciinema yum install: yum install asciinema homebrew install: brew install asciinema 2、常规用途介绍 1 2 3 4 5 6 7 8 9 10 11 12 13 14 开始录屏 asciinema rec 停止录屏 Ctrl+D 或 exit 然后Ctrl+C 本地播放 asciinema play filename URL播放 asciinema play http(s)://asciinema.org/a/22124.cast 上传到as</description>
    </item>
    
    <item>
      <title>分析挖矿病毒</title>
      <link>https://anTtutu.github.io/post/2020-08-19-mine_virus/</link>
      <pubDate>Wed, 19 Aug 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-08-19-mine_virus/</guid>
      <description>前言 8月13日一早接到负责公司内服务器的IT工程师提醒，测试环境有2台服务器CPU飙得超高，让检查下 1、查看IP 发现是2019年7月份搭建的mysql集群和redis集群测试服务器，先运行top检查进程，发现有个程序占了服务器8C的580%，几乎完全把CPU核心占满了 2、百度下案</description>
    </item>
    
    <item>
      <title>关于</title>
      <link>https://anTtutu.github.io/about/</link>
      <pubDate>Sun, 16 Feb 2020 15:47:16 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/about/</guid>
      <description>我是谁 一位Java开发者，喜欢研究一些技术。因为anttu被老外占用了，改用anTtutu注册。 平时喜欢整理个人博客，逛逛技术论坛，折腾Pi开发板等。 了解一些linux、DB、服务器方面的少量知识。 学习Golang和Python中，目前Golang比较感兴趣。 这个博客是我参考飞雪</description>
    </item>
    
    <item>
      <title>改用最快的静态blog-hugo</title>
      <link>https://anTtutu.github.io/post/2020-02-13-hugo_blog/</link>
      <pubDate>Thu, 13 Feb 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-02-13-hugo_blog/</guid>
      <description>前言 之前用的jekyll搭建的git pages静态blog，今年因为疫情，在家学习go，在bilibili看golang的学习视频，其中发现李文周讲解的golang学习视频不错，从头学习了基础，发现之前直接拿着数据类型和流程控制看语法有很多不足，一些基础的东西忽略了 发现李文周的b</description>
    </item>
    
    <item>
      <title>Golang学习笔记01 - 关键字和基础数据类型介绍</title>
      <link>https://anTtutu.github.io/post/2020-02-11-golang_study_01/</link>
      <pubDate>Tue, 11 Feb 2020 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-02-11-golang_study_01/</guid>
      <description>前言 记录自己的Golang学习笔记 一、Golang关键字和介绍 25个关键字: 1 2 3 4 5 break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var 针对自己不太熟悉的关键字说明下，虽然以后用着会熟悉，但是提前了解不是坏事 1、break: 跳出循环 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 func main() { /</description>
    </item>
    
    <item>
      <title>30W数据批量导入redis集群</title>
      <link>https://anTtutu.github.io/post/2020-01-07-redis_batch_import/</link>
      <pubDate>Tue, 07 Jan 2020 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2020-01-07-redis_batch_import/</guid>
      <description>前言 碰到工作中有数据要一次性快速刷入redis的场景 查了下资料，找到了快速高效的写入方法了 1、先想法子把数据组装程redis底层的命令格式 比如： 1 2 hset key filed value set key value 2、大量的基础数据生成redis命令 之前我是采用golang读取数据源并转化程redis命令 3、用redis批量导入方</description>
    </item>
    
    <item>
      <title>mysql集群在线无损扩容</title>
      <link>https://anTtutu.github.io/post/2019-12-21-mysql_expansion/</link>
      <pubDate>Sat, 21 Dec 2019 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2019-12-21-mysql_expansion/</guid>
      <description>前言 收到数据库磁盘占比告警了 前提条件，磁盘采用lvm管理方式，做在线无损扩容才方便管理，其他方式没测试过 1、分配一个1T的新盘，HDD、SDD随规划选择 这个一般在磁阵或者云管理平台操作，不需要什么命令，一般都是图形化操作 2、查找新分配的1T新盘 1 2 fdisk -l lvmdiskscan 个人建议第二个命令，2个命</description>
    </item>
    
    <item>
      <title>dos命令速查</title>
      <link>https://anTtutu.github.io/post/2019-11-18-dos_cli/</link>
      <pubDate>Mon, 18 Nov 2019 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2019-11-18-dos_cli/</guid>
      <description>前言 dos命令速查 1、有关某个命令的详细信息，请键入HELP命令名 命令 说明 assoc 显示或修改文件扩展名关联。 attrib 显示或更改文件属性。 break 设置或清除扩展式CTRL+C检查。 bcdedit 设置启动数据库中的属性以控制启动加载。 cacls 显示或修改文件的访问控制列表(ACL)。 call 从另一个批处理程序调用这一个。 cd 显示</description>
    </item>
    
    <item>
      <title>tcp、http的一些知识整理</title>
      <link>https://anTtutu.github.io/post/2019-09-13-tcp_http/</link>
      <pubDate>Fri, 13 Sep 2019 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2019-09-13-tcp_http/</guid>
      <description>前言 tcp、http的一些知识整理 1、含义 1.1 序列号seq 占4个字节，用来标记数据段的顺序，TCP把连接中发送的所有数据字节都编上一个序号，第一个字节的编号由本地随机产生；给字节编上序号后，就给每一个报文段指派一个序号；序列号seq就是这个报文段中的第一个字节的数据编号。 1.2 确认号a</description>
    </item>
    
    <item>
      <title>python工具-移除照片或视频背景</title>
      <link>https://anTtutu.github.io/post/2019-07-10-python_bgremover/</link>
      <pubDate>Wed, 10 Jul 2019 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2019-07-10-python_bgremover/</guid>
      <description>前言 BackgroundRemover是一个命令行工具，用于从视频 和图像中删除背景 1、依赖 Requirements python &amp;lt;= 3.6 python3.6-dev #or what ever version of python you using torch and torchvision stable version https://pytorch.org ffmpeg 4.4+ 1 2 3 pip install python3.6-dev pip install ffmpeg pip install torch 2、安装 1 pip install backgroundremover 3、下载模型并设置 如果不提前下载模型的话，在首次执行的时候会自动下载，但是需要从 google 网盘下载，因此需要有翻墙能</description>
    </item>
    
    <item>
      <title>springboot的devTools热部署</title>
      <link>https://anTtutu.github.io/post/2019-06-08-springboot_hotdeploy/</link>
      <pubDate>Sat, 08 Jun 2019 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2019-06-08-springboot_hotdeploy/</guid>
      <description>前言 springboot利用devtools实现热部署 1、application.yml 1 2 3 4 5 6 7 8 9 spring:devtools:restart:#热部署生效enabled:true#设置重启的目录#additional-paths: src/main/java#class</description>
    </item>
    
    <item>
      <title>nginx参数介绍</title>
      <link>https://anTtutu.github.io/post/2019-05-30-nginx_conf/</link>
      <pubDate>Thu, 30 May 2019 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2019-05-30-nginx_conf/</guid>
      <description>前言 nginx的反向代理和当做前端容器使用比较广泛，有一些参数详情搜集整理下 1、Nginx运行工作进程数量 Nginx运行工作进程个数一般设置CPU的核心或者核心数x2。 如果不了解cpu的核数，可以top命令之后按1看出来，也可以查看/proc/cpuinfo文件 1 grep ^processor /proc/cpuinfo | wc -l 1 2</description>
    </item>
    
    <item>
      <title>linux的一些细节点-不定期补充</title>
      <link>https://anTtutu.github.io/post/2019-04-21-linux_knoledge/</link>
      <pubDate>Sun, 21 Apr 2019 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2019-04-21-linux_knoledge/</guid>
      <description>前言 linux的一些小细节记录 1、tmp目录、var目录自动清理 tmp下的文件或目录长时间没有更新或者改动的话会被系统定期时间，配置参考如下: 1 vi /usr/lib/tmpfiles.d/tmp.conf 1 2 3 4 5 6 7 8 9 # Clear tmp directories separately, to make them easier to override v /tmp 1777 root root 90d v /var/tmp 1777 root root 90d # Exclude namespace mountpoints created with PrivateTmp=yes x /tmp/systemd-private-%b-* X /tmp/systemd-private-%b-*/tmp x /var/tmp/systemd-private-%b-* X /var/tmp/systemd-private-%b-*/tmp 2、tcp连接数统计 1 2 3 4 5 6 7 netstat -ant|awk</description>
    </item>
    
    <item>
      <title>被同事误删表找回丢失的数据</title>
      <link>https://anTtutu.github.io/post/2019-03-26-mysql_data_restore/</link>
      <pubDate>Tue, 26 Mar 2019 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2019-03-26-mysql_data_restore/</guid>
      <description>有些不靠谱的同事真的很误事，运维了几年的系统从来没出过误删表数据的事件，3月14日下午突然被同事误删了订单表全量数据，查询表返回0 rows，突然大脑一片空白，心想完了完了，最重要的表数据全部被清理了，虽然有每日凌晨5点的全量备份，但是截止下午的数据怎么找回？从来没碰到过误删事件，</description>
    </item>
    
    <item>
      <title>JDK1.8.0.161版本bug定位</title>
      <link>https://anTtutu.github.io/post/2019-03-11-jdkbug/</link>
      <pubDate>Fri, 08 Mar 2019 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2019-03-11-jdkbug/</guid>
      <description>前言 好好运行的系统，突然故障，无意间根据错误信息查找，竟然是jdk的bug，描述下曲折的定位过程。 1、错误日志 有个老系统有使用到soap接口，采用CXF结合接口文件wsdl自动生成的接口开发的，突然在3月2日（后续日志定位才发现真正故障的时间）无法正常工作，但是实际发现时间已经到</description>
    </item>
    
    <item>
      <title>容灾概念介绍</title>
      <link>https://anTtutu.github.io/post/2018-12-04-disaster_recovery/</link>
      <pubDate>Tue, 04 Dec 2018 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2018-12-04-disaster_recovery/</guid>
      <description>前言 容灾的一些名词、概念介绍 1、介绍 容灾恢复能力的关键指标 RPO（Recovery Point Obejective，恢复点目标） 是指业务系统所允许的在灾难过程中的最大数据丢失量，用来衡量容灾系统的数据冗余备份能力。 RTO（Recovery Time Objective，恢复时间目标） 是指信息系统从灾</description>
    </item>
    
    <item>
      <title>手机端调测H5页面神器-vConsole</title>
      <link>https://anTtutu.github.io/post/2018-11-08-vconsole/</link>
      <pubDate>Thu, 08 Nov 2018 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2018-11-08-vconsole/</guid>
      <description>前言 手机端调测H5页面是比较麻烦的，需要借助腾讯的vConsole神器 下载地址： https://github.com/Tencent/vConsole.git 1、导入引用 1 2 3 4 5 6 &amp;lt;script src=&amp;#34;https://unpkg.com/vconsole@latest/dist/vconsole.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script&amp;gt; // 初始化 var vConsole = new VConsole(); console.log(&amp;#39;VConsole is cool&amp;#39;); &amp;lt;/script&amp;gt; 如下图： 2、属性 vConsole.version 当前 vConsole 的版本号。 只读 类型：string 例子： 1 vConsole.version // =&amp;gt; &amp;#34;3.11.0&amp;#34; vConsole.option 配置项。 可写 类型：object 键名 类型 可选 默认值 描述 defaultPlugins Array true [&amp;lsquo;system&amp;rsquo;, &amp;rsquo;network&amp;rsquo;, &amp;rsquo;element&amp;rsquo;, &amp;lsquo;storage&amp;rsquo;] 需</description>
    </item>
    
    <item>
      <title>mongodb安装后的初始化操作</title>
      <link>https://anTtutu.github.io/post/2018-10-14-mongodb_init/</link>
      <pubDate>Sun, 14 Oct 2018 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2018-10-14-mongodb_init/</guid>
      <description>前言 mongodb安装成功后的初始化操作，安装步骤比较简单略过不讲 1、启动 1 ./mongobd -f /etc/mongodb.conf 2、进入命令行 1 ./mongo 3、创建超级管理账号 1 2 3 4 5 6 7 8 9 10 use admin db.createUser({user:&amp;#34;adminuser&amp;#34;,pwd:&amp;#34;12345678&amp;#34;,roles:[&amp;#34;userAdminAnyDatabase&amp;#34;]}) ## 4、用超级管理账号创建业务账号 db.auth(&amp;#39;adminuser&amp;#39;, &amp;#39;12345678&amp;#39;) use testdb db.createUser({user:&amp;#34;testuser&amp;#34;,pwd:&amp;#34;12345678&amp;#34;,roles: [{role:&amp;#34;readWrite&amp;#34;, db:&amp;#34;testdb&amp;#34;}]}) 5、conf文件demo，yaml格式，注意空格 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20</description>
    </item>
    
    <item>
      <title>mydumper第三方备份还原工具</title>
      <link>https://anTtutu.github.io/post/2018-09-16-mydumper/</link>
      <pubDate>Sun, 16 Sep 2018 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2018-09-16-mydumper/</guid>
      <description>前言 Mydumper是一个针对MySQL和Drizzle的高性能多线程备份和恢复工具。开发人员主要来自MySQL,Facebook,SkySQL公司。性能比自带的mysqldump强劲 github: https://github.com/mydumper/mydumper 1、安装 redhat、centos举例 1.1 安装依赖 1.1.1 安装编译库 1 yum install -y cmake gcc gcc-c++ git make 1.1.2 安装开发库 1</description>
    </item>
    
    <item>
      <title>mysql低版本源代码安装</title>
      <link>https://anTtutu.github.io/post/2018-08-14-mysql_install/</link>
      <pubDate>Tue, 14 Aug 2018 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2018-08-14-mysql_install/</guid>
      <description>前言 如果不使用最新版本的mysql，但是低版本的mysql官方不提供编译好的安装包，只能自己编译安装了。以下步骤和参数针对5.6、5.7生效，新版本有变动请阅读官方文档介绍。 1、环境检测 使用下面的命令检查是否安装有MySQL Server 1 2 3 4 rpm -qa | grep mysql 有的话通过下面的命令来卸载掉 rpm -e mysql /</description>
    </item>
    
    <item>
      <title>java OOM的种类整理</title>
      <link>https://anTtutu.github.io/post/2018-05-08-oom/</link>
      <pubDate>Tue, 08 May 2018 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2018-05-08-oom/</guid>
      <description>前言 java OOM的种类整理 1、分类 1.1【情况一】： 1 java.lang.OutOfMemoryError: Java heap space: 这种是java堆内存不够，一个原因是真不够，另一个原因是程序中有死循环 如果是java堆内存不够的话，可以通过调整JVM下面的配置来解决： -Xms3062m -Xmx3062m 1.2【情况二】 1 java.lang.OutOfMemoryError: GC overhead limit exceeded 【解释】 JDK6新增错误类型，当GC为释放很小空间占用</description>
    </item>
    
    <item>
      <title>OrangePi</title>
      <link>https://anTtutu.github.io/post/2018-04-10-orangepi/</link>
      <pubDate>Tue, 10 Apr 2018 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2018-04-10-orangepi/</guid>
      <description>前言 朋友弄了一批香橙派的板子，给我做测试，拿了板子、CF卡、电源后开启了试玩，通过配置查看，香橙派比草莓派配置还强劲一些，国产的还不错，不过生态没草莓派完善，对新手可能没健全的指导，稍显不友好，但是对于我这种职业开发人员来说，小case，所以这里个人觉得香橙派还是很不错的 1、准备</description>
    </item>
    
    <item>
      <title>springmvc的参数校验注解整理</title>
      <link>https://anTtutu.github.io/post/2018-03-19-springmvc/</link>
      <pubDate>Mon, 19 Mar 2018 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2018-03-19-springmvc/</guid>
      <description>1、JSR303注解字段校验 注解 说明 功能 @AssertFalse Boolean,boolean 验证注解的元素值是false @AssertTrue Boolean,boolean 验证注解的元素值是true @NotNull 任意类型 验证注解的元素值不是null @Null 任意类型 验证注解的元素值是null @Min(value=值) BigDecimal，BigInteger, byte,short, int, long，等任何Number或</description>
    </item>
    
    <item>
      <title>Cygwin安装</title>
      <link>https://anTtutu.github.io/post/2017-12-03-cygwin_install/</link>
      <pubDate>Sun, 03 Dec 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-12-03-cygwin_install/</guid>
      <description>前言 cygwin是windows平台上运行的unix模拟环境，它对于学习unix/linux操作环境，或者从unix到windows的应用程序移植，或者进行某些特殊的开发工作，尤其是使用gnu工具集在windows上进行嵌入式系统开发，非常有用。 cygwin cygwin相对安装虚拟机、vp</description>
    </item>
    
    <item>
      <title>oracle知识梳理-执行计划分析</title>
      <link>https://anTtutu.github.io/post/2017-11-29-oracle_explain/</link>
      <pubDate>Wed, 29 Nov 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-11-29-oracle_explain/</guid>
      <description>前言 分析某条SQL的性能问题，通常我们要先看SQL的执行计划，看看SQL的每一步执行是否存在问题。常用的两种方法查看SQL执行计划。 1、autotrace生成执行计划 这种方式执行方便，但是当遇到执行时间长的SQL就变得不太现实，它是先产生结果再生成执行计划的。关于Autotrac</description>
    </item>
    
    <item>
      <title>oracle知识梳理-awr\ash\addm日志开启并提取</title>
      <link>https://anTtutu.github.io/post/2017-11-28-oracle_awr/</link>
      <pubDate>Tue, 28 Nov 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-11-28-oracle_awr/</guid>
      <description>前言 之前工作经常搜集AWR日志，但是因工作环境的调整，6年下来的笔记都无法带出来，只能回忆一些和找一些网上的信息整理了。 常规的性能分析，awr足够了，但是深层次的问题，需要更多的日志，下面整理下awr、ash、addm日志的手工提取方式 1、awr报告开启和提取操作步骤 前提条件 数据</description>
    </item>
    
    <item>
      <title>java小日常记录-不定期更新</title>
      <link>https://anTtutu.github.io/post/2017-08-27-java_use_note/</link>
      <pubDate>Sun, 27 Aug 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-08-27-java_use_note/</guid>
      <description>前言 记录工作中碰到的一些 java 小日常积累 1、远程debug调测 web项目远程调测 - 仅用于测试环境或者上线前的调测 注意： 仅限测试环境或者上线前的调测，如果用于生产环境，你的开发工具再debug模式起着的话，会拦截所有的请求。 1 2 # linux增加以下这段就可以远程连接服务器的5888端口</description>
    </item>
    
    <item>
      <title>web应用分析利器-xrebel</title>
      <link>https://anTtutu.github.io/post/2017-08-23-xrebel/</link>
      <pubDate>Wed, 23 Aug 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-08-23-xrebel/</guid>
      <description>前言 XRebel 是不间断运行在 web 应用的交互式分析器，当发现问题会在浏览器中显示警告信息。XRebel 会实时监测应用代码的性能指标和可能会发生的问题。 看名称跟之前的jrebel有点相像，对了，是同一家公司的产品，jrebel解决java项目动态部署，xrebel解决j2ee应用的交互式分析（</description>
    </item>
    
    <item>
      <title>给你的静态博客增加留言系统</title>
      <link>https://anTtutu.github.io/post/2017-08-06-gitment/</link>
      <pubDate>Sun, 06 Aug 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-08-06-gitment/</guid>
      <description>前言 Gitment 是作者imsun实现的一款基于 GitHub Issues 的评论系统。支持在前端直接引入，不需要任何后端代码。可以在页面进行登录、查看、评论、点赞等操作，同时有完整的 Markdown / GFM 和代码高亮支持。尤为适合各种基于 GitHub Pages 的静态博客或项目页面。 本博客评论系统已迁移至 Gitment，参考作者的介绍部署成功，不过这</description>
    </item>
    
    <item>
      <title>开发技能-shell面试整理</title>
      <link>https://anTtutu.github.io/post/2017-07-28-shell_check/</link>
      <pubDate>Fri, 28 Jul 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-07-28-shell_check/</guid>
      <description>1、常规命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 cd 切换目录 ls 查看当前目录下的内容 cp 复制 head、tail 显示文件头、尾内容 cat 查看文件内容 more、less 分页展示文件内容 rm 删除 tar 解、压缩 touch 创建文本 mv 移动或重命名 find 在文件系统中搜索某文件 如find . -name filename 支持正则 wc 统计 grep 查找某个字符串 pwd 显示当</description>
    </item>
    
    <item>
      <title>SQLMap初学使用和参数讲解</title>
      <link>https://anTtutu.github.io/post/2017-07-16-sqlmap/</link>
      <pubDate>Sun, 16 Jul 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-07-16-sqlmap/</guid>
      <description>前言 测试web系统的sql注入问题，学着使用神器sqlmap，下载了最新版本。 Git地址：https://github.com/sqlmapproject/sqlmap 前提条件设置好python2.7和环境变量，python3.6也支持只是2.7当前工具更多 参数 以某自己搭建的注入</description>
    </item>
    
    <item>
      <title>初识Kali-linux及其工具</title>
      <link>https://anTtutu.github.io/post/2017-07-15-kali/</link>
      <pubDate>Sat, 15 Jul 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-07-15-kali/</guid>
      <description>前言 在虚拟机里安装了专用安全测试工具，kali Linux， vm及其安装步骤很简单，kali是debain的一个linux发型版本，里面包含很多安全测试工具，既然是工具，你懂的，既是盾也是矛，不过跟神器sqlmap一样，我们拿来做安全测试再好不过。 安装完kali后，默认是图形化进入</description>
    </item>
    
    <item>
      <title>linux日常小细节注意说明</title>
      <link>https://anTtutu.github.io/post/2017-06-07-shell_use/</link>
      <pubDate>Wed, 07 Jun 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-06-07-shell_use/</guid>
      <description>前言 一些 linux 和 shell 的小细节记录 1、清理cache 1 2 3 4 5 6 7 8 仅清除页面缓存（PageCache） sync; echo 1 &amp;gt; /proc/sys/vm/drop_caches 清除目录项和inode sync; echo 2 &amp;gt; /proc/sys/vm/drop_caches 清除页面缓存，目录项和inode sync; echo 3 &amp;gt; /proc/sys/vm/drop_caches 2、crontab定时任务取值范围 文件/etc/crontab中每行任务的描述格式如下: 1 2 3 4 5 6</description>
    </item>
    
    <item>
      <title>Redis日常命令整理</title>
      <link>https://anTtutu.github.io/post/2017-06-06-redis_cli/</link>
      <pubDate>Tue, 06 Jun 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-06-06-redis_cli/</guid>
      <description>前言 整理下在linux中操作redis中的一些命令 1、统计个数 redis中名称含有OMP_OFFLINE的key的个数； 1 src/redis-cli keys &amp;#34;*OMP_OFFLINE*&amp;#34; | wc -l 2、批量删除 批量删除 0号数据库中名称含有OMP_OFFLINE的key： 1 src/redis-cli -n 0 keys &amp;#34;*OMP_OFFLINE*&amp;#34; | xargs src/redis-cli -n 0 del 在redis的客户端环境中并不支持批量删除。 可以把</description>
    </item>
    
    <item>
      <title>eclipse之jrebel热部署插件</title>
      <link>https://anTtutu.github.io/post/2017-06-05-jrebel/</link>
      <pubDate>Mon, 05 Jun 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-06-05-jrebel/</guid>
      <description>前言 JRebel是一个J2EE热部署的工具。使用它可以减少浪费8-18％的开发时间在项目的构建和部署上。虽然Java也提供了HotSpot的JVM，但是如果你修改的类中有方法名称变动的话，HotSpot就无能为力了，必须要重要启动应用服务器。JRebel则可以动态监视class文</description>
    </item>
    
    <item>
      <title>市面上所有浏览器内核或UserAgent参数</title>
      <link>https://anTtutu.github.io/post/2017-06-04-browser/</link>
      <pubDate>Sun, 04 Jun 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-06-04-browser/</guid>
      <description>前言 市面上常见的浏览器内核，只需要挑其中常见的测试即可 内核 介绍 Trident内核 IE最先开发或使用的，也称IE内核，360浏览器使用的也是IE内核； Edge内核 微软最新浏览器的内核； Webkit内核 谷歌chrome浏览器最先开发或使用，也叫谷歌内核； Gecko内核 Netscape</description>
    </item>
    
    <item>
      <title>jekyll搭建自己的静态blog</title>
      <link>https://anTtutu.github.io/post/2017-06-02-jekyll_ruby_blog/</link>
      <pubDate>Fri, 02 Jun 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-06-02-jekyll_ruby_blog/</guid>
      <description>前言 端午节，花了2天时间学习了下ruby + jekyll + github pages，踩过不少坑，记录下学习笔记。 ruby建议是在Linux环境下安装的，但是工作电脑是windows比较常见，下面记录下在windows 7 64bit版本下安装ruby + jekyll + ruby devkit的经历，进过坑，不过都爬出来了，把爬坑</description>
    </item>
    
    <item>
      <title>Oracle11gR2手工配置dataguard</title>
      <link>https://anTtutu.github.io/post/2017-05-26-oracle11gr2_dataguard/</link>
      <pubDate>Fri, 26 May 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-05-26-oracle11gr2_dataguard/</guid>
      <description>前言 网上有很多Oracle Dataguard的配置教程，但不难发现，很多采用的是rman duplicate这种方法，尽管此种方法较为简便。但在某种程度上，却也误导了初学者，虽说也能配置成功，但只知其然不知其所以然，Dataguard的本质没有吃透，也不利于其维护和调优。 注： 本配置</description>
    </item>
    
    <item>
      <title>Log4j参数整理</title>
      <link>https://anTtutu.github.io/post/2017-05-25-log4j_config/</link>
      <pubDate>Thu, 25 May 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-05-25-log4j_config/</guid>
      <description>前言 Log4j 1.x的知识点回顾，2015年8月5日，Apache的Logging Services项目管理委员会宣布Log4j 1.x已经结束生命周期，建议升级 Log4j 2.x。 1. 配置文件 Log4J配置文件的基本格式如下： #配置根Logger log4j.rootLogger = [ level ] , appenderName1 , appenderName2 , … #配置日志信息输出目的地Appen</description>
    </item>
    
    <item>
      <title>VCS第七波-磁阵管理LVM和VxVM3-LVM</title>
      <link>https://anTtutu.github.io/post/2017-05-23-lvm_vxvm3/</link>
      <pubDate>Tue, 23 May 2017 21:46:22 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-05-23-lvm_vxvm3/</guid>
      <description>前言 LVM（Logicl Volume Manager），逻辑卷管理器，通过使用逻辑卷管理器对硬盘存储设备进行管理，可以实现硬盘空间的动态划分和调整。 1、基本概念 1.1 物理卷&amp;ndash;PV（Physical Volume） 物理卷在逻辑卷管理中处于最底层，它可以是实际物理硬盘上的分区，也可以是整个</description>
    </item>
    
    <item>
      <title>VCS第六波-磁阵管理LVM和VxVM2-VxVM</title>
      <link>https://anTtutu.github.io/post/2017-05-22-lvm_vxvm2/</link>
      <pubDate>Mon, 22 May 2017 21:46:21 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-05-22-lvm_vxvm2/</guid>
      <description>前言 VxVM虽然支持不同平台，但是又是商业的，需要支付昂贵的license费用，基于Veritas在存储界的地位，还是需要了解下的。 1、初始化磁盘命令 1 2 vxdctl enable vxdisksetup -if sdb 2、查看卷组 1 vxdisk -o alldgs list 3、查看已激活卷组 1 vxdg list 4、创建卷组 1 2 vxdg init vgname diskname(sdd)/vgcdr0_1=sdf vxdg init diskgroup disk_name=device_name 5、删除卷组 1 vxdg destroy vgname 6、创建逻辑卷 1 2</description>
    </item>
    
    <item>
      <title>VCS第五波-磁阵管理LVM和VxVM1-LVM</title>
      <link>https://anTtutu.github.io/post/2017-05-21-lvm_vxvm/</link>
      <pubDate>Sun, 21 May 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-05-21-lvm_vxvm/</guid>
      <description>前言 使用VCS双机经常要跟磁阵打交道，磁阵的逻辑卷组管理也有不同厂之间的方案，比如免费的系统自带的lvm，Linux的lvm与unix的lvm还有点不同，Veritas的VxVM， 对比各有千秋 lvm lvm免费成本低，但集群管理也比较方便和省成本，相同的设备做容灾也可以应用，但是不同设</description>
    </item>
    
    <item>
      <title>VCS第四波-main.cf解读</title>
      <link>https://anTtutu.github.io/post/2017-05-15-vcs4/</link>
      <pubDate>Mon, 15 May 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-05-15-vcs4/</guid>
      <description>前言 mian.cf是VCS的集群配置文件，需要理解该配置文件及其参数含义，下面把以前电信行业积累的Oracle冷双机结构标记下 1、样例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73</description>
    </item>
    
    <item>
      <title>VCS第三波-VCS的模块工作原理</title>
      <link>https://anTtutu.github.io/post/2017-05-14-vcs3/</link>
      <pubDate>Sun, 14 May 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-05-14-vcs3/</guid>
      <description>前言 既然VCS用得多了，原理还是要了解下的，不然定位问题还是很吃力的，知道了集群知识和VCS的工作原理，对日常管理有很大的帮助 转自http://down.51cto.com/data/316764 小结 HAD用于是配合Agent做状态同步的工作进程 LLT用于心跳通讯 GAB用于Clu</description>
    </item>
    
    <item>
      <title>VCS第二波-命令管理</title>
      <link>https://anTtutu.github.io/post/2017-05-13-vcs2/</link>
      <pubDate>Sat, 13 May 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-05-13-vcs2/</guid>
      <description>声明：部分截图和命令的返回结果借用网络，因VCS是商业软件缺license，安装VCS后需要license，演示成本太大 环境和安装目录 VCS的安装和命令都在下列目录下：sbin, /usr/sbin, /opt/VRTS/bin,和/opt/VRTSvcs/bin 如果没有设置VCS的环境变量，请在/e</description>
    </item>
    
    <item>
      <title>VCS第一波-HA-VCS</title>
      <link>https://anTtutu.github.io/post/2017-05-12-vcs1/</link>
      <pubDate>Fri, 12 May 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-05-12-vcs1/</guid>
      <description>前言 换到互联网电商行业了，以前电信行业的知识积累做下笔记。 谈到VCS，就会想到HA-高可用方案，做高可用方案的厂商比较多，其中工作接触到Veritas的VCS和IBM的HACMP，这里先对VCS做下笔记整理，互联网行业都喜欢用免费方案和热备，VCS的冷备方案几乎没见到厂商使用，但</description>
    </item>
    
    <item>
      <title>H2内存数据库</title>
      <link>https://anTtutu.github.io/post/2017-05-11-h2/</link>
      <pubDate>Thu, 11 May 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-05-11-h2/</guid>
      <description>前言 H2数据库介绍 之前项目中用到了H2内存数据库，常用的开源数据库：H2，Derby，HSQLDB，MySQL，PostgreSQL。其中H2，HSQLDB类似，十分适合作为嵌入式数据库使用，其它的数据库大部分都需要安装独立的客户端和服务器端。 H2的优势 1、h2采用纯Java编写</description>
    </item>
    
    <item>
      <title>利用网上的Caeser算法写了一个唯一id生成工具</title>
      <link>https://anTtutu.github.io/post/2017-04-10-caeser/</link>
      <pubDate>Mon, 10 Apr 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-04-10-caeser/</guid>
      <description>前言 工作中需要用到，不需要用uuid这种太长的，但是需要有自己特色标识的，于是晚上搜集了部分算法和思路，加工出来一个唯一随机id生成类 思路 改造过的Caesar算法，利用随机数加密，生成前12位 + 后4位随机数，经测试大量数据和实际使用验证，无重复值出现，可以放心使用 1、代码 1 2 3 4</description>
    </item>
    
    <item>
      <title>Java高防OCR和机器人图形验证码</title>
      <link>https://anTtutu.github.io/post/2017-03-09-java_captach/</link>
      <pubDate>Thu, 09 Mar 2017 21:46:20 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2017-03-09-java_captach/</guid>
      <description>前言 结合网上的图形验证码技术，不依赖第三方包纯java加工了一个比较复杂的图形验证码方案，防OCR、防机器人。 网上的图形验证码方案都是零星的，弄了一个随机字体、随机彩色字符、随机字体大小、随机扭曲、随机旋转等技术，能有效的防OCR、描边、深浅色等技术识别。 本意是想区分登录、领券、</description>
    </item>
    
    <item>
      <title>归档</title>
      <link>https://anTtutu.github.io/archives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anTtutu.github.io/archives/</guid>
      <description>content/archives/index.md</description>
    </item>
    
    <item>
      <title>搜索</title>
      <link>https://anTtutu.github.io/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://anTtutu.github.io/search/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
