<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sdk on Anttu&#39;s Blog</title>
    <link>https://anTtutu.github.io/categories/sdk/</link>
    <description>Recent content in sdk on Anttu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 22 Nov 2022 00:29:47 +0800</lastBuildDate><atom:link href="https://anTtutu.github.io/categories/sdk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python多版本管理工具</title>
      <link>https://anTtutu.github.io/post/2022-11-28-python_muilt_version/</link>
      <pubDate>Tue, 22 Nov 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-11-28-python_muilt_version/</guid>
      <description>前言 python多版本管理工具整理介绍 序号 工具名称 安装方式 说明 备注 1 pyenv curl -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash 比较早出现的 python 多版本管理工具，目前不太活跃了 2 virtualenv pip install virtualenv 通过创建虚拟机方式管理 3 anaconda https://repo.anaconda.com/archive/ 带了很多科学计算包的发行版，包含conda 4 miniconda https://repo.anaconda.com/miniconda/ 不带科学计算包的mini版本，只有python和conda 5 miniforge https://github.com/conda-forge/miniforge min</description>
    </item>
    
    <item>
      <title>go多版本管理工具</title>
      <link>https://anTtutu.github.io/post/2022-11-10-go_muilt_version/</link>
      <pubDate>Thu, 10 Nov 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-11-10-go_muilt_version/</guid>
      <description>前言 在本地新旧项目并行开发的过程中，你大概率会遇到一个令人头疼的问题，如何同时使用两个不同版本的 Golang Runtime 进行开发呢？ 在容器和 CI 流行的当前时代下，我们似乎已经习惯了用 docker run 来切换各种语言的版本，来完成不同项目的开发，基础类型项目的兼容性测试。配合一些支持远程调试的工具，体验似乎也还行。 但</description>
    </item>
    
    <item>
      <title>sdkman的使用</title>
      <link>https://anTtutu.github.io/post/2022-01-06-sdkman/</link>
      <pubDate>Thu, 06 Jan 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-01-06-sdkman/</guid>
      <description>前言 多sdk版本管理工具 1、安装java jdk 1 sdk install java 2、安装指定版本的 java jdk 1 sdk install java 8u131 3、安装本地包 1 sdk install groovy 3.0.0-SNAPSHOT /path/to/groovy-3.0.0-SNAPSHOT 4、移除 java jdk 1 sdk uninstall java 5、查看当前生效的 java jdk 1 2 3 sdk current java # 查看所有本地包的当前版本 sdk current 6、查看支持的清单 1 sdk list 7、查看软件的版本 1 sdk list java 8、临时切换版本 1 sdk use java 8.0.232.hs-adpt 9、切换默认</description>
    </item>
    
  </channel>
</rss>
