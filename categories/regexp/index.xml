<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>regexp on Anttu&#39;s Blog</title>
    <link>https://anTtutu.github.io/categories/regexp/</link>
    <description>Recent content in regexp on Anttu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 07 Jan 2022 00:29:47 +0800</lastBuildDate><atom:link href="https://anTtutu.github.io/categories/regexp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>一些正则小细节-不定期补充</title>
      <link>https://anTtutu.github.io/post/2022-01-07-regexp/</link>
      <pubDate>Fri, 07 Jan 2022 00:29:47 +0800</pubDate>
      
      <guid>https://anTtutu.github.io/post/2022-01-07-regexp/</guid>
      <description>前言 记录日常工作碰到的一些正则小细节 1、group分组 需要通过()把提取的参数圈起来，这样才会产生分组 1 2 3 4 5 6 7 8 9 10 private static String collectMapperId(String value) { String result = &amp;#34;&amp;#34;; String regId = &amp;#34;id=\&amp;#34;(.*?)\&amp;#34;&amp;#34;; Pattern pattern = Pattern.compile(regId); Matcher matcher = pattern.matcher(value); if (matcher.find()) { result = matcher.group(1); } return result; } 对比如果没有(),是没有分组效果的 1 2 Exception in thread &amp;#34;main&amp;#34; java.lang.IndexOutOfBoundsException: No group 1 at java.util.regex.Matcher.group(Matcher.java:538) 阅读源码和源码中的注释，其实也是s.</description>
    </item>
    
  </channel>
</rss>
